"use strict";const $=document.querySelector.bind(document),$$=document.querySelectorAll.bind(document),worksWebpages=$(".works__webpages"),worksList=$(".works__list"),skillsBlockWraps=$$(".skills__block-wrap"),skillsBlocks=$(".skills__blocks"),worksBlockWrap=$(".works__block-wrap");worksBlockWrap.addEventListener("click",(()=>{worksBlockWrap.classList.toggle("block-clicked"),worksBlockWrap.classList.contains("block-clicked")&&window.innerWidth>768?$(".contacts").style.marginTop="4rem":$(".contacts").style.marginTop="16rem"})),skillsBlockWraps.forEach((e=>{e.querySelector("div").addEventListener("click",(()=>{e.classList.toggle("block-clicked"),e.classList.contains("block-clicked")&&window.innerWidth>768?$(".works").style.marginTop="4rem":$(".works").style.marginTop="16rem"}))}));const formContainer=$(".form__container"),formData=$(".form__data"),contactButton=$(".hero__contact"),successWindow=$(".form__success-window"),closeButton=$(".form__close"),body=document.querySelector("body"),URL_APP="https://script.google.com/macros/s/AKfycbxvgn5osvpAPiO0CoSrDvoc0wKONSNSHaSJu35l3UGcpJGFakP_nJxnuv0uSNFSKJRj/exec";contactButton.addEventListener("click",(()=>{formContainer.style.display="block",body.style.overflow="hidden"})),formContainer.addEventListener("click",(e=>{e.target.closest(".form__window")||(formContainer.style.display="none",body.style.overflow="auto",formData.reset())}));const inputName=$("#name"),inputCompany=$("#company"),inputPhoneNumber=$("#phoneNumber"),inputEmail=$("#email"),inputMessage=$("#message"),nameRegExp=/^[a-zA-Z\s-]+$/,textRegExp=/^[a-zA-Z0-9\s\.,!?';:()]+$/,emailRegExp=/^[A-Za-z0-9_.@-]+$/,digitsRegExp=/\d/;function validateInput(e,t,o=""){t.test(e.value[e.value.length-1])||(e.value=e.value.slice(0,e.value.length-1)),"+"!==o||e.value.startsWith("+")||""===e.value||(e.value="+"+e.value)}inputName.addEventListener("input",(()=>{validateInput(inputName,nameRegExp)})),inputCompany.addEventListener("input",(()=>{validateInput(inputCompany,textRegExp)})),inputPhoneNumber.addEventListener("input",(()=>{validateInput(inputPhoneNumber,digitsRegExp,"+")})),inputEmail.addEventListener("input",(()=>{validateInput(inputEmail,emailRegExp)})),inputMessage.addEventListener("input",(()=>{validateInput(inputMessage,textRegExp)}));const validation=new JustValidate(".form__data");validation.addField("#name",[{rule:"required",value:!0,errorMessage:"Enter your name!"},{rule:"minLength",value:2,errorMessage:"The name is too short!"},{rule:"maxLength",value:62,errorMessage:"The name is too long!"}]).addField("#phoneNumber",[{rule:"required",value:!0,errorMessage:"Enter your phone number!"},{rule:"maxLength",value:13,errorMessage:"The phone number is too long!"}]).addField("#company",[{rule:"maxLength",value:62,errorMessage:"The company name is too long!"}]).addField("#email",[{rule:"email",errorMessage:"wrong email format!"}]).onSuccess((e=>{let t={name:inputName.value.trim(),email:inputEmail.value.trim(),phone:inputPhoneNumber.value.trim(),message:inputMessage.value.trim(),company:inputCompany.value.trim()},o=[];for(let e in t){let n=encodeURIComponent(e),a=encodeURIComponent(t[e]);o.push(n+"="+a)}o=o.join("&");fetch(URL_APP,{method:"POST",headers:{"Content-type":"application/x-www-form-urlencoded; charset=UTF-8"},mode:"no-cors",body:o});successWindow.style.display="block",setTimeout((function(){successWindow.style.display="none",formContainer.style.display="none"}),3e3),body.style.overflow="auto",formData.reset()})),closeButton.addEventListener("click",(()=>{formContainer.style.display="none",body.style.overflow="auto",formData.reset(),$$(".just-validate-error-label").forEach((e=>{e.remove()})),$$(".just-validate-error-field").forEach((e=>{e.classList.remove("just-validate-error-field")}))}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,